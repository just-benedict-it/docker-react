sudo : required

services : docker

before_install :
  - docker build -t just-benedict-it/docker-react -f Dockerfile.dev .

script : 
  - docker run -e CI=true just-benedict-it/docker-react npm run test

language: generic

deploy:
  - provider : elasticbeanstalk
  - region : "us-east-2"
  - app : "docker-react"
  - env : "Dockerreact-env"
  - bucket name : "elasticbeanstalk-us-east-2-560148726593"
  - bucket path : "docker-react"
  on:
    branch: main

access_key_id : $AWS_ACCESS_KEY
secret_access_key : $AWS_SECRET_KEY


#Rename the docker-compose.yml file to docker-compose-dev.yml. Going forward you will need to pass a flag to specify which compose file you want to build and run from:
#docker-compose -f docker-compose-dev.yml up
#docker-compose -f docker-compose-dev.yml up --build
#docker-compose -f docker-compose-dev.yml down

#2. Create a production Compose config file

#Create a docker-compose.yml file in the root of the project and paste the following:

#version: '3'
#services:
#  web:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - '80:80'
#AWS EBS will see a file named docker-compose.yml and use it to build the single container application.
